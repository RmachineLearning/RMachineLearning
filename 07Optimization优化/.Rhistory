setwd("E:/workspace/R/machine learning/07-Optimization")
height.to.weight <- function(height, a, b)
{
return(a + b * height)
}
# Second code snippet
heights.weights <- read.csv(file.path('data', '01_heights_weights_genders.csv'))
coef(lm(Weight ~ Height, data = heights.weights))
squared.error <- function(heights.weights, a, b)
{
predictions <- with(heights.weights, height.to.weight(Height, a, b))
errors <- with(heights.weights, Weight - predictions)
return(sum(errors ^ 2))
}
optim(c(0, 0),
function (x)
{
squared.error(heights.weights, x[1], x[2])
})
curve(sapply(x, function (a) {a.error(a)}), from = -1000, to = 1000)
a.error <- function(a)
{
return(squared.error(heights.weights, a, 0))
}
curve(sapply(x, function (a) {a.error(a)}), from = -1000, to = 1000)
b.error <- function(b)
{
return(squared.error(heights.weights, 0, b))
}
curve(sapply(x, function (b) {b.error(b)}), from = -1000, to = 1000)
#
lambda <- 1
optim(c(0, 0),
function (x)
{
ridge.error(heights.weights, x[1], x[2], lambda)
})
ridge.error <- function(heights.weights, a, b, lambda)
{
predictions <- with(heights.weights, height.to.weight(Height, a, b))
errors <- with(heights.weights, Weight - predictions)
return(sum(errors ^ 2) + lambda * (a ^ 2 + b ^ 2))
}
lambda <- 1
optim(c(0, 0),
function (x)
{
ridge.error(heights.weights, x[1], x[2], lambda)
})
a.ridge.error <- function(a, lambda)
{
return(ridge.error(heights.weights, a, 0, lambda))
}
curve(sapply(x, function (a) {a.ridge.error(a, lambda)}), from = -1000, to = 1000)
b.ridge.error <- function(b, lambda)
{
return(ridge.error(heights.weights, 0, b, lambda))
}
curve(sapply(x, function (b) {b.ridge.error(b, lambda)}), from = -1000, to = 1000)
absolute.error <- function(heights.weights, a, b)
{
predictions <- with(heights.weights, height.to.weight(Height, a, b))
errors <- with(heights.weights, Weight - predictions)
return(sum(abs(errors)))
}
# Thirteenth code snippet
a.absolute.error <- function(a)
{
return(absolute.error(heights.weights, a, 0))
}
curve(sapply(x, function (a) {a.absolute.error(a)}), from = -1000, to = 1000)
english.letters <- c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',
'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
'w', 'x', 'y', 'z')
caesar.cipher <- list()
inverse.caesar.cipher <- list()
